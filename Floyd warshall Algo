//Floyd warshall Algo

Input:
       graph[][] = { {0,   5,  INF, 10},
                    {INF,  0,  3,  INF},
                    {INF, INF, 0,   1},
                    {INF, INF, INF, 0} }
which represents the following graph
             10
       (0)------->(3)
        |         /|\
      5 |          |
        |          | 1
       \|/         |
       (1)------->(2)
            3       
Note that the value of graph[i][j] is 0 if i is equal to j 
And graph[i][j] is INF (infinite) if there is no edge from vertex i to j.

Output:
Shortest distance matrix
      0      5      8      9
    INF      0      3      4
    INF    INF      0      1
    INF    INF    INF      0 
Recommended: Please solve it o

void floydWarshall(int graph[V][V])
{
   int dist[V][V], i, j ,k;
   for(i=0;i<V;i++)
     for(j=0;j<V; j++)
       dist[i][j] = graph[i][j];

       for(k = 0; k<V; k++)
          for(i=0;i<V;i++)
              for(j=0;j<V; j++)
              {
                if(dist[i][k]+dist[k][j] < dist[i][j])
                    dist[i][j] = dist[i][k]+dist[k][j];
              }
    print(dist)
}
