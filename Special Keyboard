//Special Keyboard

Imagine you have a special keyboard with the following keys:
Key 1:  Prints 'A' on screen
Key 2: (Ctrl-A): Select screen
Key 3: (Ctrl-C): Copy selection to buffer
Key 4: (Ctrl-V): Print buffer on screen appending it after what has already been printed. If you can only press the keyboard for N times (with the above four keys), write a program to produce maximum numbers of A's. That is to say, the input parameter is N (No. of keys that you can press), the output is M (No. of As that you can produce).

Input:
2
3
7

Output:
3
9

int findOptimal(int N)
{
   if(N<=6)
    return N;
  int max  = 0;
  int b;
  for(int b  = N-3; b>=1; b--)
  {
     int curr = (N-b-1) * findOptimal(b);
     if(curr>max)
       max=curr;
  }
  return max;
}

DP solution

int findOptimal(int n)
{
  if(N<=6)
    return N;
  screen[N];

  int n;
  for(n = 1; n<=6; n++)
     screen[n-1] = n;
  for(int n=7; n<=N; n++)
  {
   screen[n] = 0;
   for(int i = n-3; i>= 0; i++)
   {
      curr = (n - i -1)*screen[i-1];
      if(screen[n-1] < curr)
          screen[n-1] = curr;
    }
  }
  return screen[n-1];
}
