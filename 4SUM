//Find four elements that sum to a given value | Set 2 ( O(n^2Logn) Solution)

For example, if the given array is {10, 2, 3, 4, 5, 9, 7, 8} and X = 23, then your function should print “3 5 7 8” (3 + 5 + 7 + 8 = 23).

void find4Element(int a[], int n, int sum)
{
   unorederd_map<int, pair<int,int>> m;
   for(int i = 0; i<n; i++)
   {
        for(int j = i+1; j < n; j++)
        {
           m[arr[i]+arr[j]] = make_pair{i, j};
        }
   }
   for(int i = 0; i<n ; i++)
   {
      for(int j = i+1; j<n ; j++)
      {
         int x=arr[i]+arr[j];
         if(mp.find(x-sum) != mp.end())
         {
              pair<int, int> p  = m[x-sum];
              if(p.first != i && p.second != j && p.first != j && p.second != i)
              {
                 cout<<a[p.first]<<" "<<a[p.second]<<" "<<a[i]<<" "<<a[j]<<endl;
              }
         }
      }
   }
}
