Chocolate Distribution Problem
Given an array of n integers where each value represents number of chocolates in a packet. Each packet can have variable number of chocolates. There are m students, the task is to distribute chocolate packets such that:

Each student gets one packet.
The difference between the number of chocolates in packet with maximum chocolates and packet with minimum chocolates given to the students is minimum.

Input : arr[] = {7, 3, 2, 4, 9, 12, 56}
m = 3
Output: Minimum Difference is 2

int findMinDiff(int arr[], int n, int m)
{
   if( n==0 || m==0)
     return -1;
   if(m>n)
    return -1;

   sort(arr, arr+n);
   int min_diff = INT_MAX;
   int diff = 0;
   int start, end;
   for(int i = 0; i<n-m; i++)
   {
      diff = arr[i+m-1] - arr[i];
      if(diff < min_diff)
      {
          start = i;
          last = i+m-i;
          min_diff = diff;
      }
   }
   return min_diff;
   //return (arr[last]-arr[first])
}
