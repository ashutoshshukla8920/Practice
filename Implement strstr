// Implement strstr

Using KMP

void computeLPSArray(int arr[], int lps[], int n)
{
  int len = 0;
  lps[0] = 0;
  int i = 1;
  while(i < n)
  {
    if(arr[i] == arr[len])
    {
       len++;
       lps[i] = len;
       i++;
    }
    else
    {
      if(len != 0)
      {
         len = lps[len-1];
      }
      else
      {
         lps[i] = 0;
         i++;
      }
    }
  }
}

void KMPSearch(char *pat, char *str)
{
  int M = strlen(pat);
  int N = strlen(str);
  int lps[M];
  computeLPSArray(pat, lps, M);
  int i =0;
  int j=0;
  while(i<N)
  {
     if(pat[j]==str[i])
     {
       i++;
       j++;
     }
     if( j == M)
     {
        cout<< "found patten at "<<i-j;
        j = lps[j-1];
     }
     else if(i < N && pat[j] != txt[i])
     {
        if(j!= 0)
        {
           j = lps[j-1];
        }
        else
        {
          i++;
        }
     }
  }
}
